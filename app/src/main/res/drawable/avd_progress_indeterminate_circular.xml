<animated-vector xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:aapt="http://schemas.android.com/aapt">

    <!-- 一个圆形的图片 -->
    <aapt:attr name="android:drawable">
        <vector
            android:width="48dp"
            android:height="48dp"
            android:tint="?attr/colorControlActivated"
            android:viewportHeight="48"
            android:viewportWidth="48">
            <!-- 圆形的容器 -->
            <group
                android:name="progressBarContainer"
                android:translateX="24"
                android:translateY="24">
                <!--
                这是个圆形路径：
                android:fillColor="@android:color/transparent":填充透明
                android:strokeColor="@android:color/white":线条白色
                android:strokeLineCap="square":指定曲线的首尾外观，square即是方形边缘
                android:strokeLineJoin="miter":指定两条曲线相交的边角外观。miter即是默认值，锐角
                android:trimPathStart和android:trimPathEnd 初始只显示整个圆形的0.03
                 -->
                <path
                    android:name="progressBar"
                    android:fillColor="@android:color/transparent"
                    android:pathData="M -7.122 -0.001 C -7.122 -3.933 -3.933 -7.122 0.001 -7.122 C 3.933 -7.122 7.122 -3.933 7.122 -0.001 C 7.122 3.933 3.933 7.122 0.001 7.122 C -3.933 7.122 -7.122 3.933 -7.122 -0.001 Z"
                    android:strokeColor="@android:color/white"
                    android:strokeLineCap="square"
                    android:strokeLineJoin="miter"
                    android:strokeWidth="1"
                    android:trimPathEnd="0.03"
                    android:trimPathOffset="0"
                    android:trimPathStart="0" />
            </group>
        </vector>
    </aapt:attr>

    <!-- 圆形的动画 -->
    <target android:name="progressBar">
        <aapt:attr name="android:animation">
            <set>
                <!--android:repeatCount="-1" 无限调用该动画-->
                <!--android:propertyName="trimPathStart"线条从起点缩短到终点，即初始截断部分是0%，从起点开始逐渐扩大到终点，达到75%，即是留下25% -->
                <!--因为原图保留0.03的原因，所以会额外留下一点点 -->
                <!--android:duration="1333"，会从一点变成25%的小弧的过渡时间，默认值是300m -->
                <!-- 总结：这是一个先显示圆弧，再缩小到只有25%的小圆弧 -->
                <objectAnimator
                    android:duration="1333"
                    android:propertyName="trimPathStart"
                    android:repeatCount="-1"
                    android:valueFrom="0"
                    android:valueTo="0.75"
                    android:valueType="floatType">
                    <!-- 差值器，相关文章会独自介绍它，这个差值器会导致它看起来居于下个动画执行 -->
                    <aapt:attr name="android:interpolator">
                        <pathInterpolator android:pathData="L0.5,0 C 0.7,0 0.6,1 1,1" />
                    </aapt:attr>
                </objectAnimator>
                <!-- android:propertyName="trimPathEnd" 即初始截断部分是97%，从起点开始逐渐缩小到终点，达到截断部分22%。 -->
                <objectAnimator
                    android:duration="1333"
                    android:propertyName="trimPathEnd"
                    android:repeatCount="-1"
                    android:valueFrom="0.03"
                    android:valueTo="0.78"
                    android:valueType="floatType">
                    <!-- 差值器，相关文章会独自介绍它，这个差值器会导致它看起来优先执行 -->
                    <aapt:attr name="android:interpolator">
                        <pathInterpolator android:pathData="C0.2,0 0.1,1 0.5,0.96 C 0.96666666666,0.96 0.99333333333,1 1,1" />
                    </aapt:attr>
                </objectAnimator>
                <!-- android:propertyName="trimPathOffset" 一个偏移动画，移动0.25让动画显的更自然一点 -->
                <objectAnimator
                    android:duration="1333"
                    android:interpolator="@android:anim/linear_interpolator"
                    android:propertyName="trimPathOffset"
                    android:repeatCount="-1"
                    android:valueFrom="0"
                    android:valueTo="0.25"
                    android:valueType="floatType" />
            </set>
        </aapt:attr>
    </target>

    <!-- 容器的动画，它只负责无限的旋转720度 -->
    <target android:name="progressBarContainer">
        <aapt:attr name="android:animation">
            <objectAnimator
                android:duration="4444"
                android:interpolator="@android:anim/linear_interpolator"
                android:propertyName="rotation"
                android:repeatCount="-1"
                android:valueFrom="0"
                android:valueTo="720"
                android:valueType="floatType" />
        </aapt:attr>
    </target>

</animated-vector>